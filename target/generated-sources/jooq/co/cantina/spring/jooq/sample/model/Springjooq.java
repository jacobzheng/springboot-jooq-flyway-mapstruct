/*
 * This file is generated by jOOQ.
 */
package co.cantina.spring.jooq.sample.model;


import co.cantina.spring.jooq.sample.model.tables.Books;
import co.cantina.spring.jooq.sample.model.tables.FlywaySchemaHistory;
import co.cantina.spring.jooq.sample.model.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Springjooq extends SchemaImpl {

    private static final long serialVersionUID = 635707661;

    /**
     * The reference instance of <code>springjooq</code>
     */
    public static final Springjooq SPRINGJOOQ = new Springjooq();

    /**
     * The table <code>springjooq.books</code>.
     */
    public final Books BOOKS = co.cantina.spring.jooq.sample.model.tables.Books.BOOKS;

    /**
     * The table <code>springjooq.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = co.cantina.spring.jooq.sample.model.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>springjooq.users</code>.
     */
    public final Users USERS = co.cantina.spring.jooq.sample.model.tables.Users.USERS;

    /**
     * No further instances allowed
     */
    private Springjooq() {
        super("springjooq", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Books.BOOKS,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Users.USERS);
    }
}
